(defvar show_vol false)
(defvar show_brightness false)
(defpoll currvol
	:interval "3s"
	"./scripts/getvol"
)
(defpoll currbrightness
	:interval "3s"
	"./scripts/brightness.sh get"
)

(defwidget bar []
	(centerbox
		:class "container"
		:orientation "h"
		(workspaces)
		(time)
		(helpers)
	)
)

(defpoll date :interval "60s"
	"date '+%I:%M'"
)

(deflisten workspacesList :initial ""
	"/home/autumn/.config/eww/scripts/workspaces.py"
)

(defwidget workspaces []
	(box
		:class "workspaces"
		:orientation "h"
		:halign "start"
		:spacing 10
		(literal :content "${workspacesList}")
	)
)

(defwidget volume []
	(eventbox
		:onhover "${EWW_CMD} update show_vol=true"
		:onhoverlost "${EWW_CMD} update show_vol=false"
		(box
			:class "volume button"
			:orientation "h"
			:spacing 10
			:space-evenly false
			:vexpand false
			:hexpand false
			(button :onclick "" "󰕾")
			(revealer
				:transition "slideright"
				:duration "350ms"
				:reveal show_vol
				(scale
					:class "volume_scale"
					:orientation "h"
					:width 100
					:value currvol
					:max 100
					:min 0
					:onchange "amixer -D pulse sset Master {}%"
				)
			)
		)
	)
)

(defwidget inet []
	(eventbox :onhover "" :class "inet button"
		:halign "center"
		(label :text "󰤨 ")
	)
)

(defwidget brightness []
	(eventbox
		:onhover "${EWW_CMD} update show_brightness=true"
		:onhoverlost "${EWW_CMD} update show_brightness=false"
		(box
			:class "brightness button"
			:orientation "h"
			:spacing 10
			:space-evenly false
			:vexpand false
			:hexpand false
			(button :onclick "" "󰃞")
			(revealer
				:transition "slideright"
				:duration "350ms"
				:reveal show_brightness
				(scale
					:class "brightness_scale"
					:orientation "h"
					:width 100
					:value currbrightness
					:max 100
					:min 0
					:onchange "./scripts/brightness.sh set {}"
				)
			)
		)
	)
)

(defwidget ram []
	(box :class "ram"
		:orientation "h"
		:halign "center"
		:spacing 10
		:tooltip "RAM: ${round(EWW_RAM.used_mem_perc, 0)}%"
		(circular-progress
			:class "ram_progress"
			:width 20
			:value {EWW_RAM.used_mem_perc}
			:thickness 3
		)
	)
)

(defwidget time []
	(box :class "time"
		(label :text {date})
	)
)

(defwidget battery [status battery one two three four five six full charging]
	(box :class "battery "

		:orientation "h"
		:spacing 10
		:halign "center"
		:tooltip "Battery: ${battery}%"
		(circular-progress
			:class "${status == "Charging" ? "charging" : status == "Full" ? "full" : "" } ${battery > 95 ? "six" : battery > 85 ? "five" : battery > 75 ? "four" : battery > 65 ? "three" : battery > 55 ? "two" : "one"}"
			:width 20
			:value battery
			:thickness 3
		)
	)
)

(defwidget helpers []
	(box :class "helpers"
		:orientation "h"
		:halign "end"
		:spacing 10
		:space-evenly false
		(volume)
		(brightness)
		(inet)
		(ram)
		(battery 
			:status {EWW_BATTERY.BAT1.status}
			:battery {EWW_BATTERY.BAT1.capacity}
			:one "󰂃"
			:two " "
			:three " "
			:four " "
			:five " "
			:six " "
			:full "󱈏"
			:charging "󰂄"
		)
	)
)

(defwindow bar
  :monitor 0
  :stacking "fg"
  :exclusive "true"
  :geometry (geometry
				:height "30px"
				:width "100%"
				:anchor "top center"
  )
  (bar))
